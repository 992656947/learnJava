C
D
AD
B
C
A
ABCD
A
AC
D
Java集合框架的三大类接口是：List、Set和Map。

List接口：有序的集合，允许包含重复元素。常用实现类有ArrayList、LinkedList等。
Set接口：无序的集合，不允许包含重复元素。常用实现类有HashSet、TreeSet等。
Map接口：键值对集合，不允许键重复，但值可以重复。常用实现类有HashMap、TreeMap等

ArrayList：底层实现是动态数组，
尤其是在中间位置进行插入和删除时（O(n)时间复杂度）。
LinkedList：底层实现是双向链表。
插入和删除操作效率较高，尤其是在链表的头部和尾部进行操作时（O(1)时间复杂度）。

import java.util.ArrayList;
import java.util.List;

public class TestList {
	public static void main(String[] args) {
		List list = new ArrayList();
		list.add("A");
		list.add("B");
		list.add("C");
		print(list);
	}

	public static void print(List pList){
		for (int i = 0; i < pList.size(); i++) {
			String str = (String) pList.get(i); // 修正类型转换错误
			System.out.print(str);
		}
	}
}
运行结果：ABC

import java.util.HashMap;
import java.util.Map;

public class TestMap {
	public static void main(String[] args) {
		Map<String, String> map = new HashMap<>();
		map.put("key1", "value1");
		map.put("key2", "value2");
		map.put("key3", "value3");

		for (Map.Entry<String, String> entry : map.entrySet()) {
			System.out.println(entry.getKey() + " : " + entry.getValue());
		}
	}
}

申明：
普通集合：List list = new ArrayList();
泛型集合：List<String> list = new ArrayList<>();
初始化：
普通集合：list.add("A"); list.add(1);（可以添加任意类型的元素）
泛型集合：list.add("A");（只能添加指定类型的元素）
使用：
普通集合：String str = (String) list.get(0);（需要进行类型转换）
泛型集合：String str = list.get(0);（不需要进行类型转换，编译器会检查类型）


